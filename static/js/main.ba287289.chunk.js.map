{"version":3,"sources":["BooksAPI.js","SearchBooks.js","BooksList.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","concat","then","res","json","data","book","getAll","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchBooks","state","shelfType","handleSearch","e","_this","props","onSearchBook","target","value","handleChange","persist","BooksAPI","console","log","onUpdateBook","_this2","this","_this$props","allBooks","map","react_default","a","createElement","className","react_router_dom","to","onChange","type","name","placeholder","key","imageLinks","style","width","height","backgroundImage","smallThumbnail","defaultValue","disabled","title","undefined","authors","Component","BooksList","wantToRead","read","currentlyReading","BooksApp","setState","error","updateBooks","c","_this3","react_router","path","render","src_SearchBooks","exact","src_BooksList","filter","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ba287289.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    state = {\r\n        shelfType : {}\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n\r\n        if(this.props.onSearchBook) {\r\n              this.props.onSearchBook(e.target.value)\r\n      }\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.persist()\r\n        BooksAPI.get(e.target['name'])\r\n        .then((book) => {\r\n            console.log(e.target.value);\r\n            if(this.props.onUpdateBook) {\r\n                this.props.onUpdateBook(book, e.target.value)\r\n            }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { shelfType } = this.state\r\n        const { books, allBooks } = this.props\r\n\r\n        allBooks.map((book) => (\r\n            shelfType[book.id] = book.shelf\r\n        ))\r\n\r\n        return(\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link to=\"/\" className=\"close-search\">Close</Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n            <input  onChange={this.handleSearch} type=\"text\" name='name' placeholder=\"Search by title or author\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n                {books.map((book) => (\r\n                    <li key={book.id}>\r\n                      <div className=\"book\">\r\n                        <div className=\"book-top\">\r\n                        {(book.imageLinks) ?\r\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.smallThumbnail})` }}></div>\r\n                            :\r\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(./icons/default-cover.png)' }}></div>\r\n                        }\r\n\r\n                          <div className=\"book-shelf-changer\">\r\n\r\n                            <select name={book.id} onChange={this.handleChange} defaultValue={(shelfType[book.id] ? shelfType[book.id]: \"none\")}>\r\n                              <option value=\"move\" disabled>Move to...</option>\r\n                              <option value=\"currentlyReading\">Currently Reading</option>\r\n                              <option value=\"wantToRead\">Want to Read</option>\r\n                              <option value=\"read\">Read</option>\r\n                              <option value=\"none\">None</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"book-title\">{book.title}</div>\r\n\r\n                        {book.authors !== undefined && (\r\n                            <div className=\"book-authors\">{book.authors.toString()}</div>\r\n                        )}\r\n\r\n\r\n                      </div>\r\n                    </li>\r\n\r\n                ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default SearchBooks\r\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass BooksList extends Component {\r\n\r\n    handleChange = (e) => {\r\n        e.persist()\r\n        BooksAPI.get(e.target['name'])\r\n        .then((book) => {\r\n            if(this.props.onUpdateBook) {\r\n                this.props.onUpdateBook(book, e.target.value)\r\n            }\r\n            })\r\n    }\r\n    render() {\r\n        const { wantToRead, read, currentlyReading} = this.props\r\n\r\n        return(\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">\r\n                      {currentlyReading.map((book) => (\r\n                          <li key={book.id}>\r\n                            <div className=\"book\">\r\n                              <div className=\"book-top\">\r\n                              {(book.imageLinks) ?\r\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.smallThumbnail})` }}></div>\r\n                                  :\r\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(./icons/default-cover.png)' }}></div>\r\n                              }\r\n                                <div className=\"book-shelf-changer\">\r\n\r\n                                  <select name={book.id} onChange={this.handleChange} defaultValue='currentlyReading'>\r\n                                    <option value=\"move\" disabled>Move to...</option>\r\n                                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                                    <option value=\"wantToRead\">Want to Read</option>\r\n                                    <option value=\"read\">Read</option>\r\n                                    <option value=\"none\">None</option>\r\n                                  </select>\r\n\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"book-title\">{book.title}</div>\r\n\r\n                              {book.authors !== undefined && (\r\n                                  <div className=\"book-authors\">{book.authors.toString()}</div>\r\n                              )}\r\n\r\n\r\n                            </div>\r\n                          </li>\r\n\r\n                      ))}\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">\r\n                      {wantToRead.map((book) => (\r\n                          <li key={book.id}>\r\n                            <div className=\"book\">\r\n                              <div className=\"book-top\">\r\n                              {(book.imageLinks) ?\r\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.smallThumbnail})` }}></div>\r\n                                  :\r\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(./icons/default-cover.png)' }}></div>\r\n                              }\r\n                                <div className=\"book-shelf-changer\">\r\n\r\n                                  <select name={book.id} onChange={this.handleChange} defaultValue='wantToRead'>\r\n                                    <option value=\"move\" disabled>Move to...</option>\r\n                                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                                    <option value=\"wantToRead\">Want to Read</option>\r\n                                    <option value=\"read\">Read</option>\r\n                                    <option value=\"none\">None</option>\r\n                                  </select>\r\n\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"book-title\">{book.title}</div>\r\n\r\n                              {book.authors !== undefined && (\r\n                                  <div className=\"book-authors\">{book.authors.toString()}</div>\r\n                              )}\r\n\r\n\r\n                            </div>\r\n                          </li>\r\n\r\n                      ))}\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">\r\n                      {read.map((book) => (\r\n                          <li key={book.id}>\r\n                            <div className=\"book\">\r\n                              <div className=\"book-top\">\r\n                              {(book.imageLinks) ?\r\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.smallThumbnail})` }}></div>\r\n                                  :\r\n                                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(./icons/default-cover.png)' }}></div>\r\n                              }\r\n                                <div className=\"book-shelf-changer\">\r\n\r\n                                  <select name={book.id} onChange={this.handleChange} defaultValue='read'>\r\n                                    <option value=\"move\" disabled>Move to...</option>\r\n                                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                                    <option value=\"wantToRead\">Want to Read</option>\r\n                                    <option value=\"read\">Read</option>\r\n                                    <option value=\"none\">None</option>\r\n                                  </select>\r\n\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"book-title\">{book.title}</div>\r\n\r\n                              {book.authors !== undefined && (\r\n                                  <div className=\"book-authors\">{book.authors.toString()}</div>\r\n                              )}\r\n\r\n\r\n                            </div>\r\n                          </li>\r\n\r\n                      ))}\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Link className=\"open-search\" to='/search'>Add a book</Link>\r\n\r\n\r\n              </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BooksList\r\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport SearchBooks from './SearchBooks'\nimport BooksList from './BooksList'\n\n\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    allBooks: []\n  }\n\n\n  SearchBooks = (book) => {\n    if (book){\n        BooksAPI.search(book)\n        .then((book) => {\n\n            this.setState({\n                books: book.error  ? [] : book\n            })\n        })\n    } else {\n        this.setState({\n            books: []\n        })\n    }\n\n}\n\n\n  updateBooks = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n    .then((c) => {\n        BooksAPI.getAll()\n        .then((allBooks) => {\n\n            this.setState({\n                allBooks: allBooks,\n            })\n\n        })\n\n    })\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll()\n    .then((allBooks) => {\n\n        this.setState({\n            allBooks: allBooks,\n\n        })\n\n    })\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"app\">\n        <Route path='/search' render={() => (\n            <SearchBooks\n                books={this.state.books}\n                allBooks={this.state.allBooks}\n                onSearchBook={(book) => {\n                    console.log(book);\n\n                        this.SearchBooks(book)\n\n                }}\n                onUpdateBook={(book, shelf) =>{\n                    this.updateBooks(book, shelf)\n                }}/>\n        )} />\n\n        <Route exact path='/' render={() => (\n\n            <BooksList\n                currentlyReading={this.state.allBooks.filter((book) => (\n                    book.shelf === 'currentlyReading'\n                ))}\n                wantToRead={this.state.allBooks.filter((book) => (\n                    book.shelf === 'wantToRead'\n                ))}\n                read={this.state.allBooks.filter((book) => (\n                    book.shelf === 'read'\n                ))}\n                onUpdateBook={(book, shelf) =>{\n                    this.updateBooks(book, shelf)\n                }}/>\n        )} />\n\n\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}